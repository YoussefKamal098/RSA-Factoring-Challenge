#!/usr/bin/python3
"""
    Module n to read numbers from a file and print their factorization.

    Usage: ./factors <file>
        where <file> is a file containing natural numbers to factor.
        One number per line
        You can assume that all lines will be valid natural numbers greater than 1
        You can assume that there will be no empty line, and no space before
        and after the valid number
        The file will always end with a new line

    Returns:
        None
    """
from sys import argv, stderr, exit
from math import sqrt


def print_two_smaller_product(num):
    """
    Prints the factorization of a given number into two smaller numbers.

    Args:
        num (int): The number to factorize.

    Returns:
        None
    """
    print("{:d}=".format(num), end="")

    if num % 2 == 0:
        print("{}*2".format(num//2))
        return

    for i in range(3, int(sqrt(num)) + 1, 2):
        if num % i == 0:
            print("{:d}*{:d}".format(num//i, i))
            return

    print("{:d}*1".format(num, num))


def main():
    """
    Main function to read numbers from a file and print their factorization.

    Usage: ./factors <file>
        where <file> is a file containing natural numbers to factor.
        One number per line
        You can assume that all lines will be valid natural numbers greater than 1
        You can assume that there will be no empty line, and no space before
        and after the valid number
        The file will always end with a new line

    Returns:
        None
    """
    if len(argv) != 2:
        stderr.write("Usage: ./factors <file>\n")
        exit()

    try:
        file = open(argv[1], "r")
        for line in file:
            print_two_smaller_product(int(line))
    except OSError as err:
        print(err)
    except ValueError as err:
        print(err)


if __name__ == "__main__":
    main()
